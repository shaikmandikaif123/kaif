It looks like users in Lille, Paris are reporting an issue where certain documents, specifically CER and P10, are not being classified correctly in the index within a transaction. The key points from their report are:

1. Inconsistent Classification:

Documents with the same certificate type (CER) are being associated with different IMEX reference numbers, but they are not indexed consistently.

Some transactions have the CER document correctly indexed, while others do not.



2. Missing Entries in the Index:

The CER document is not appearing in the index when expected.

Users are requesting that it be properly added to ensure consistency.




Possible Causes:

Indexing Rules Issue: The system might not be recognizing CER as a valid document type in certain cases.

Metadata Mapping Error: If the indexing relies on metadata, there might be a missing or incorrect mapping for CER documents.

Transaction-Specific Behavior: The classification logic may vary based on IMEX reference numbers, leading to inconsistent results.


Next Steps:

Investigate how documents are indexed and classified within transactions.

Check whether the CER document type is missing in any configuration files or databases.

Review past transactions to identify patterns in when CER is included or missing.

Implement fixes or rules to ensure CER is always indexed properly.


Would you like help troubleshooting the indexing process?




SELECT 
    d.deal_id,
    d.deal_name,
    id.imex_id,
    sc.control_id,
    s.step_id,
    c.category_name,
    k.keyword,
    bl.business_line_name,
    e.entity_name
FROM trade_finance_compliance_management.deals d
LEFT JOIN trade_finance_compliance_management.imex_deals id 
    ON d.deal_id = id.deal_id
LEFT JOIN trade_finance_compliance_management.steps s 
    ON d.deal_id = s.deal_id
LEFT JOIN trade_finance_compliance_management.step_controls sc 
    ON s.step_id = sc.step_id
LEFT JOIN embargo_check.categories c 
    ON d.category_id = c.category_id -- assumed
LEFT JOIN embargo_check.keywordsk k 
    ON d.keyword_id = k.keyword_id -- assumed
LEFT JOIN access_management.business_line bl 
    ON d.business_line_id = bl.business_line_id -- assumed
LEFT JOIN access_management.entity e 
    ON d.entity_id = e.entity_id -- assumed
















SELECT 
    d.label AS deal_name,
    k.name AS keyword_name,
    c.label AS category_name,
    bl.business_line AS business_line,
    e.noc_label AS entity,
    s.context AS step_name,
    imx.step_ref AS imex_label
FROM keywords k
JOIN categories c ON k.category_id = c.id
JOIN step_controls sc ON k.step_control_id = sc.id
JOIN steps s ON sc.step_id = s.id
JOIN deals d ON s.deal_id = d.id
JOIN business_line bl ON k.business_line_id = bl.id
JOIN entity e ON k.entity_code = e.ADC  -- Replace ADC with actual join key if different
LEFT JOIN imex_steps imx ON imx.step_type_id = s.id  -- This depends on how imex_steps links to steps
WHERE 
    k.name = 'BYBLOS BANK'
    AND bl.business_line IN ('GTPS', 'OPER', 'CDN', 'STANDARD');
ğŸ¤£










Explanation of the Situation:

1. Voyage record issue:

There's a voyage entry (linked to reference: 000140-01-0637369-POA001) that shows the vessel identifier as "250-22".



2. Lookup result:

When searching for "250-22", it shows the vessel name as:

> "Kota Lambai IMO 9351024 Singapore Formerly known as Yard No.C4250-22 Dalian New (1 Apr 2005 to 1 Apr 2005)"



This implies "250-22" is linked to Kota Lambai, with IMO 9351024.



3. Conflict in voyage data:

According to the voyage record, "Kota Lambai" was shown to be at Argentina on 20 March 2025, but:

The user is unable to verify this â€” possibly due to tracking data showing otherwise.

Therefore, they doubt that Kota Lambai is actually the vessel used for this voyage.




4. External checks failed:

Theyâ€™ve also tried verifying the vessel via external tracking websites.

The results match the internal system (like Digitrade), but still donâ€™t provide a satisfactory confirmation.





---

Conclusion / Main Issue:


The user is unable to confirm the actual vessel used for the voyage marked with vessel number "250-22", because:

The associated vessel name "Kota Lambai" doesnâ€™t match the expected location on the given date (Argentina on 20 March 2025).

External data sources also donâ€™t resolve this mismatch.



---

What they need:

They are asking for clarification or confirmation:

Is "250-22" truly Kota Lambai?

If not, what is the correct vessel name for that number?






SELECT 
    k.name,
    k.created_date
FROM 
    embargo_check.keywords k
JOIN 
    trade_finance_compliance_management.step_controls sc 
    ON k.step_control_id = sc.id
JOIN 
    trade_finance_compliance_management.steps s 
    ON sc.step_id = s.id
JOIN 
    trade_finance_compliance_management.deals d 
    ON s.deal_id = d.id
WHERE 
    d.id IN (424899, 473298);






Subject: Clarification Needed for Vessel 250-22 â€“ Ref: 000140-01-0637369-POA001

Hi [Team Name],

Could you please help confirm the correct vessel name for vessel number 250-22 under voyage 000140-01-0637369-POA001?

Currently, it shows as Kota Lambai (IMO 9351024), but tracking data suggests this vessel was not at Argentina on 20 March 2025, as per the voyage record. External sites show the same info as Digitrade.

Weâ€™re unable to verify if Kota Lambai is the correct vessel for this number. Appreciate your help in checking and confirming the actual vessel.

Thanks,
[Your Name]





We need your help to confirm the correct vessel name for vessel number 250-22 in voyage 000140-01-0637369-POA001.

In the voyage, the vessel is shown as 250-22, and when we check Lloydâ€™s, it returns Kota Lambai (IMO 9351024), formerly known as Yard No. C4250-22. This appears to be only a partial match and does not seem to be the correct vessel.

Also, tracking shows Kota Lambai was not in Argentina on 20 March 2025, which conflicts with the voyage data. External sites show the same result as Digitrade.

Could you please check and confirm the actual vessel name linked to 250-22?

Thanks,
[Your Name]










select 
    cast(sc.created_date as date) as record_date,
    count(*) as record_count
from 
    trade_finance_compliance_management.step_controls sc
join 
    trade_finance_compliance_management.steps s on sc.step_id = s.id
join 
    trade_finance_compliance_management.imex_steps is2 on is2.id = s.id
join 
    trade_finance_compliance_management.step_types st on is2.step_type_id = st.step_type_id
where 
    st.label = 'Amendment'
    and sc.document_id is not null
    and sc.created_date >= current_date - interval '6 months'
group by 
    cast(sc.created_date as date)
order by 
    record_date desc;
nullğŸ¤£









Subject: SGDocs Incident â€“ Root Cause and Post-Mortem

Hi Team,

The SGDocs team has shared the root cause and a detailed post-mortem for the recent incident. You can find it here:

Ticket Link: [Insert Ticket Link]

Let us know if you have any questions.

Best,
[Your Name]








SELECT
    e.label AS entity_base_dtr,
    d2.label AS department_base_dtr,
    p.label AS product_label,
    d.label AS deal_name,
    s.id AS step_id,
    ss2.label AS status_label,
    s.created_date,
    s.created_by,
    s.updated_date AS validated_date,
    s.updated_by AS validated_by,
    d.department_code,
    d.entity_code,
    k.name AS keyword_name,
    c.label AS keyword_category,
    CASE 
        WHEN k.is_true_hit = 'true' THEN 'NO' 
        ELSE 'YES' 
    END AS hit,
    k.observation AS comment,
    CASE 
        WHEN sc.status_code = 'VAL' THEN 'NO' 
        ELSE 'YES' 
    END AS step_validation,
    tpk.details AS bdrid,
    c2.name AS countries_of_companies,
    ufa.user_form_answer_id AS answer,
    ql.label AS question,
    al.label AS answer
FROM trade_finance_compliance_management.deals d
JOIN trade_finance_compliance_management.steps s ON d.id = s.deal_id
JOIN trade_finance_compliance_management.step_controls sc ON s.id = sc.step_id
JOIN trade_finance_compliance_management.step_statuses ss2 ON sc.status_code = ss2.status_code
JOIN trade_finance_compliance_management.products p ON d.product_id = p.product_id
JOIN access_management.entity e ON d.entity_code = e.code
JOIN access_management.department d2 ON d.department_code = d2.code
JOIN embargo_check.keywords k ON k.step_control_id = sc.id
JOIN embargo_check.categories c ON k.category_id = c.id
JOIN kyc."groups" g ON g.step_control_id = sc.id
JOIN kyc.third_party_keywords tpk ON tpk.group_id = g.group_id
JOIN kyc.group_country gc ON g.group_id = gc.group_id
JOIN kyc.country c2 ON gc.country_id = c2.country_id
JOIN aml.user_form_answers ufa ON sc.id = ufa.step_control_id
JOIN aml.forms f ON ufa.form_id = f.form_id
JOIN aml.form_questions fq ON f.form_id = fq.form_id
JOIN aml.question_labels ql ON fq.question_id = ql.question_id
JOIN aml.user_question_answers uqa ON ufa.user_form_answer_id = uqa.user_form_answer_id
JOIN aml.answer_labels al ON uqa.answer_id = al.answer_id
WHERE
    d.created_date >= '2025-02-01'
    AND d.created_date < '2025-05-01'
    AND d.business_line_id IN (1, 3, 5, 6)
    AND ss2.status_code = 'VAL'
    AND d.entity_code IN ('017', '015', '014', '013', '012', '011', '008')
    AND sc.is_active = true;







SELECT
    e.label AS entity_base_dtr,
    d2.label AS department_base_dtr,
    p.label AS product_label,
    d.label AS deal_name,
    s.id AS step_id,
    ss2.label AS status_label,
    s.created_date,
    s.created_by,
    s.updated_date AS validated_date,
    s.updated_by AS validated_by,
    d.department_code,
    d.entity_code,
    k.name AS keyword_name,
    c.label AS keyword_category,
    CASE 
        WHEN k.is_true_hit = 'true' THEN 'NO' 
        ELSE 'YES' 
    END AS hit,
    k.observation AS comment,
    CASE 
        WHEN sc.status_code = 'VAL' THEN 'NO' 
        ELSE 'YES' 
    END AS step_validation,
    tpk.details AS bdrid,
    c2.name AS countries_of_companies,
    ql.label AS question,
    MAX(CASE WHEN ufa.user_form_answer_id = 1 THEN al.label END) AS answer_1,
    MAX(CASE WHEN ufa.user_form_answer_id = 2 THEN al.label END) AS answer_2,
    MAX(CASE WHEN ufa.user_form_answer_id = 3 THEN al.label END) AS answer_3
FROM trade_finance_compliance_management.deals d
JOIN trade_finance_compliance_management.steps s ON d.id = s.deal_id
JOIN trade_finance_compliance_management.step_controls sc ON s.id = sc.step_id
JOIN trade_finance_compliance_management.step_statuses ss2 ON sc.status_code = ss2.status_code
JOIN trade_finance_compliance_management.products p ON d.product_id = p.product_id
JOIN access_management.entity e ON d.entity_code = e.code
JOIN access_management.department d2 ON d.department_code = d2.code
JOIN embargo_check.keywords k ON k.step_control_id = sc.id
JOIN embargo_check.categories c ON k.category_id = c.id
JOIN kyc."groups" g ON g.step_control_id = sc.id
JOIN kyc.third_party_keywords tpk ON tpk.group_id = g.group_id
JOIN kyc.group_country gc ON g.group_id = gc.group_id
JOIN kyc.country c2 ON gc.country_id = c2.country_id
JOIN aml.user_form_answers ufa ON sc.id = ufa.step_control_id
JOIN aml.forms f ON ufa.form_id = f.form_id
JOIN aml.form_questions fq ON f.form_id = fq.form_id
JOIN aml.question_labels ql ON fq.question_id = ql.question_id
JOIN aml.user_question_answers uqa ON ufa.user_form_answer_id = uqa.user_form_answer_id AND uqa.question_id = ql.question_id
JOIN aml.answer_labels al ON uqa.answer_id = al.answer_id
WHERE
    d.created_date >= '2025-02-01'
    AND d.created_date < '2025-05-01'
    AND d.business_line_id IN (1, 3, 5, 6)
    AND ss2.status_code = 'VAL'
    AND d.entity_code IN ('017', '015', '014', '013', '012', '011', '008')
    AND sc.is_active = true
GROUP BY
    e.label, d2.label, p.label, d.label, s.id, ss2.label,
    s.created_date, s.created_by, s.updated_date, s.updated_by,
    d.department_code, d.entity_code, k.name, c.label,
    k.is_true_hit, k.observation, sc.status_code, tpk.details, c2.name, ql.label
ORDER BY
    ql.label;
